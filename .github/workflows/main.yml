name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/ci_cd

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password@123
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d testdb -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      tf-serving:
        image: emacski/tensorflow-serving:latest
        ports:
          - 8500:8500
          - 8501:8501

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Test Application
        run: |
          python -m pytest tests

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Run Services
        run: |
          docker-compose build
          docker-compose up -d
          sleep 30  # Wait for services to start

      # - name: Test Main Project API
      #   run: |
      #     echo "Testing main project API..."
      #     curl -F "threshold=0.9" -F "file=@resources/images/boy.jpg" http://0.0.0.0:8085/object-detec-count || (echo "API endpoint test failed" && exit 1)
      #     curl --fail http://0.0.0.0:8085/health || (echo "Health check failed" && exit 1)

      - name: Stop Services
        run: docker-compose down

